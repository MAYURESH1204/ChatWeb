{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/SingleChat.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/VideoModal.js","components/miscellaneous/message.png","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","Pages/room/Room.js","App.js","reportWebVitals.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","selectedChat","setSelectedChat","useState","user","setUser","notification","setNotification","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","handleClick","colorScheme","style","marginTop","async","title","status","duration","isClosable","position","includes","indexOf","length","test","config","headers","data","axios","post","setItem","stringify","error","description","response","message","isLoading","variant","Signup","name","setName","confirmpassword","setConfirmpassword","pic","setPic","picLoading","setPicLoading","p","accept","pics","undefined","console","log","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","ProfileModal","isOpen","onOpen","onClose","useDisclosure","_Fragment","display","alignItems","IconButton","base","icon","ViewIcon","color","_hover","background","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","flexDir","ModalCloseButton","ModalBody","Image","boxSize","src","alt","height","ScrollableChat","handleDownload","ScrollableFeed","map","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","boxShadow","backgroundColor","marginLeft","padding","maxWidth","marginBottom","content","substring","minHeight","minWidth","concat","controls","paddingBottom","flexDirection","href","download","split","pop","marginRight","float","DownloadIcon","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleAddUser","find","u","user1","groupAdmin","Authorization","token","put","chatId","handleRemove","chatName","flexWrap","pb","ml","query","get","handleSearch","Spinner","ModalFooter","socket","selectedChatCompare","SingleChat","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","showPicker","setShowPicker","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","newMessage","setNewMessage","setMessages","emit","io","on","newMessageRecieved","chat","setbg","menuOpen","setMenuOpen","voice","setVoice","audioLink","setAudioLink","audioLinksArray","setAudioLinksArray","md","ArrowBackIcon","isGroupChat","toUpperCase","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","overflowY","alignSelf","margin","className","onKeyDown","event","key","Menu","MenuButton","as","AddIcon","MenuList","MenuItem","userName","IoIosVideocam","MenuDivider","Dropzone","onDrop","formData","header","success","fileName","_ref2","getRootProps","getInputProps","_objectSpread","IoDocumentAttach","file","reader","FileReader","onloadend","result","readAsDataURL","_ref3","MdChangeCircle","MdMic","ReactMic","record","onStop","blob","blobURL","uploadResponse","Error","fileUrl","prevArray","AiOutlineAudio","startHandle","disabled","AiOutlineAudioMuted","stopHandle","BiSend","MdEmojiEmotions","val","Picker","pickerStyle","bottom","left","onEmojiClick","prevInput","emoji","Lottie","options","lastTypingTime","Date","getTime","setTimeout","IoIosSend","getSenderFull","Chatbox","ChatLoading","Stack","Skeleton","GroupChatModal","selectedUsers","setSelectedUsers","handleDelete","delUser","filter","sel","slice","handleGroup","userToAdd","MyChats","setLoggedUser","fetchChats","lg","MdGroupAdd","border","latestMessage","VideoModal","setValue","buttonClick","useCallback","BiSolidVideoPlus","SideDrawer","loadingChat","setLoadingChat","accessChat","c","logo","NotificationBadge","count","effect","Effect","SCALE","BellIcon","notif","n","paddingLeft","BsThreeDotsVertical","logoutHandler","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","Room","roomId","useParams","ref","kitToken","ZegoUIKitPrebuilt","generateKitTokenForTest","now","create","joinRoom","container","element","sharedLinks","scenario","mode","OneONoneCall","showScreenSharingButton","App","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","ColorModeScript","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.55dd5645.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","// Chakra-UI Components\nimport { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\n\n// React Components\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\n\n//Components from userCreated file\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const toast = useToast();\n  const [email, setEmail] = useState(); //React Hoooks\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const { setUser } = ChatState();\n\n  //Show button function\n  const handleClick = () => setShow(!show);\n\n  //Runs when user Press Login Button\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n    if (email.includes(\" \")) {\n      toast({\n        title: \"Email should not contain spaces.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return false;\n    }\n\n    if (email.indexOf(\"@\") === 0) {\n      toast({\n        title: \"Email cannot start with '@'.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return false;\n    }\n\n    if (email.indexOf(\"@\") === email.length - 1) {\n      toast({\n        title: \"Email cannot end with '@'.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return false;\n    }\n\n    // Using a more advanced regex pattern for email validation\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailPattern.test(email)) {\n      toast({\n        title: \"Invalid email format.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return false;\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\", //address\n        { email, password }, //Data\n        config //Format\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      {/* LoginForm email */}\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      {/* LoginForm Password */}\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          {/* Password showing eye */}\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      {/* loginButton */}\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      {/* GuestUSerButton */}\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","//Chakra-UI Components\nimport { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\n//Other Components\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const history = useHistory();\n  const toast = useToast();\n\n  const handleClick = () => setShow(!show);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (email.includes(\" \")) {\n      toast({\n        title: \"Email should not contain spaces.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return false;\n    }\n\n    if (email.indexOf(\"@\") === 0) {\n      toast({\n        title: \"Email cannot start with '@'.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return false;\n    }\n\n    if (email.indexOf(\"@\") === email.length - 1) {\n      toast({\n        title: \"Email cannot end with '@'.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return false;\n    }\n\n    // Using a more advanced regex pattern for email validation\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailPattern.test(email)) {\n      toast({\n        title: \"Invalid email format.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return false;\n    }\n\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      {\" \"}\n      {/*VerticalStack */}\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          ChatWeb\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","//Chakra-UI Components\nimport { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <IconButton\n            bg=\"#EF233C\"\n            d={{ base: \"flex\" }}\n            icon={<ViewIcon style={{ color: \"white\" }} fontSize=\"xl\" />}\n            onClick={onOpen}\n            _hover={{\n              background: \"linear-gradient(to right, #6c5ed2, #8854d3)\",\n            }}\n          />\n        </div>\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"370px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-start\"\n          >\n            {user.name}\n            <Text fontSize=\"25px\" fontFamily=\"Work sans\">\n              Email: {user.email}\n            </Text>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" justifyContent=\"flex-start\">\n            <Image\n              borderRadius=\"10px\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n              width=\"259px\"\n              height=\"205px\"\n            />\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","//CHAKRA-UI Component\nimport { useToast } from \"@chakra-ui/react\";\nimport { DownloadIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\n\n//REACT Component\nimport ScrollableFeed from \"react-scrollable-feed\";\n\n//USER-CREATED Components\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n  const toast = useToast();\n  const handleDownload = () => {\n    toast({\n      title: \"File Downloading\",\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n      position: \"bottom\",\n    });\n  };\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n\n            <span\n              style={{\n                boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\",\n                color: m.sender._id === user._id ? \"white\" : \"black\",\n                backgroundColor:\n                  m.sender._id === user._id ? \"#EF233C\" : \"#B9F5D0\",\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                background: m.sender._id === user._id ? \"#EF233C\" : \"#FFFFFF\",\n                borderRadius:\n                  m.sender._id === user._id\n                    ? \"20px 20px 0px 20px\"\n                    : \"20px 20px 20px 0px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n                display: \"inline-block\",\n                marginBottom: \"5px\",\n              }}\n            >\n              {m.content.substring(m.content.length - 3, m.content.length) ===\n              \"ebm\" ? (\n                <audio\n                  style={{ minHeight: \"39px\", minWidth: \"339px\" }}\n                  src={`http://localhost:5000/${m.content}`}\n                  controls\n                />\n              ) : m.content.substring(0, 7) === \"uploads\" ? (\n                m.content.substring(m.content.length - 3, m.content.length) ===\n                \"mp4\" ? (\n                  <video\n                    width=\"304px\"\n                    height=\"500\"\n                    style={{\n                      borderRadius: \"10px\",\n                      marginTop: \"5px\",\n                      marginBottom: \"5px\",\n                    }}\n                    controls\n                  >\n                    <source\n                      src={`http://localhost:5000/${m.content}`}\n                      type=\"video/mp4\"\n                    />\n                  </video>\n                ) : m.content.substring(\n                    m.content.length - 3,\n                    m.content.length\n                  ) === \"png\" ||\n                  m.content.substring(\n                    m.content.length - 3,\n                    m.content.length\n                  ) === \"jpg\" ||\n                  m.content.substring(\n                    m.content.length - 3,\n                    m.content.length\n                  ) === \"peg\" ? (\n                  <div\n                    style={{\n                      paddingBottom: \"8px\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <div style={{ position: \"relative\" }}>\n                      <img\n                        style={{\n                          width: \"300px\",\n                          height: \"200px\",\n                          borderRadius: \"10px\",\n                          marginTop: \"5px\",\n                          marginBottom: \"5px\",\n                        }}\n                        src={`http://localhost:5000/${m.content}`}\n                        alt=\"Image\"\n                      />\n                      <a\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\",\n                          width: \"25px\",\n                          height: \"25px\",\n                          background: \"white\",\n                          borderRadius: \"50%\",\n                          color: \"green\",\n                          padding: \"5px\",\n                          marginLeft: \"90%\",\n                          marginTop: \"-11%\",\n                          position: \"absolute\",\n                        }}\n                        href={`http://localhost:5000/${m.content}`}\n                        download\n                      >\n                        <ViewIcon />\n                      </a>\n                    </div>\n                    <p style={{ marginBottom: \"5px\" }}>\n                      You can only Preview the Image\n                    </p>\n                  </div>\n                ) : (\n                  <div\n                    style={{\n                      padding: \"5px\",\n                      paddingBottom: \"10px\",\n                      width: \"260px\",\n                    }}\n                  >\n                    <p style={{ marginBottom: \"10px\" }}>\n                      <b>FIleName:</b>\n                      <br />\n                      {m.content.split(\"_\").pop()}\n                    </p>\n                    <a\n                      style={{\n                        color: \"green\",\n                        padding: \"5px\",\n                        marginRight: \"10px\",\n                        float: \"right\",\n                        width: \"10px\",\n                        borderRadius: \"8px\",\n                      }}\n                      href={`http://localhost:5000/${m.content}`}\n                      download\n                    >\n                      <DownloadIcon onClick={handleDownload} />\n                    </a>\n                  </div>\n                )\n              ) : (\n                m.content\n              )}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n\nconst UserListItem = ({ handleFunction, user }) => {\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#DFE5EA\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","//Chakra-UI Components\nimport { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\n//Other Components\nimport axios from \"axios\";\n//React Components\nimport { useState } from \"react\";\n//UserCreated Components\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n  //Search the user\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n  //Rename the Group\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n  //Adding User\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n  //Handle User removal\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      {/* IconButton to trigger the modal */}\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      {/* Modal Component */}\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","//CSS File\nimport \"./styles.css\";\n\n//React Componenets\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\n//Other Compnents\nimport io from \"socket.io-client\";\nimport Lottie from \"react-lottie\";\nimport Dropzone from \"react-dropzone\";\nimport Picker from \"emoji-picker-react\";\nimport axios from \"axios\";\nimport { ReactMic } from \"react-mic\";\n\n//Imported Icons\nimport { IoIosVideocam } from \"react-icons/io\";\nimport { IoIosSend } from \"react-icons/io\";\nimport { MdEmojiEmotions } from \"react-icons/md\";\nimport { MdChangeCircle } from \"react-icons/md\";\nimport { IoDocumentAttach } from \"react-icons/io5\";\nimport { AiOutlineAudio } from \"react-icons/ai\";\nimport { AiOutlineAudioMuted } from \"react-icons/ai\";\nimport { BiSend } from \"react-icons/bi\";\n\n//Chakara-UI Components\nimport { AddIcon, ArrowBackIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { Input } from \"@chakra-ui/input\";\nimport { FormControl } from \"@chakra-ui/form-control\";\nimport { MdMic } from \"react-icons/md\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Spinner,\n  useToast,\n} from \"@chakra-ui/react\";\n\n//User Created Components\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport animationData from \"../animations/typing.json\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\n// Socket endpoint\nconst ENDPOINT = \"http://localhost:5000\";\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  // State for managing socket connection and typing status\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure(); // Chakra-UI modal control\n  const toast = useToast(); // Chakra-UI toast notifications\n\n  //Emoji Picker\n  const [showPicker, setShowPicker] = useState(false);\n  const onEmojiClick = (event) => {\n    setNewMessage((prevInput) => prevInput + event.emoji);\n    setShowPicker(false);\n  };\n\n  //Typing Animation\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  // Chat and User Context\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  // States for message loading and input\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // Fetch messages for the selected chat\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const [messages, setMessages] = useState([]);\n  // Send message when user presses Enter\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  // Handle sending messages when the user clicks the send button\n  const handleSend = async (event) => {\n    socket.emit(\"stop typing\", selectedChat._id);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      setNewMessage(\"\");\n      const { data } = await axios.post(\n        \"/api/message\",\n        {\n          content: newMessage,\n          chatId: selectedChat,\n        },\n        config\n      );\n      socket.emit(\"new message\", data);\n      setMessages([...messages, data]);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to send the Message\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  // Set up socket connection and listeners\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n  }, []);\n\n  // Fetch messages when selected chat changes\n  useEffect(() => {\n    fetchMessages();\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n\n  // Handle incoming messages\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  // Handle typing events\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  //Files upload\n  const onDrop = (files) => {\n    console.log(files);\n\n    let formData = new FormData();\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    formData.append(\"file\", files[0]);\n\n    axios\n      .post(\"/api/chat/uploadfiles\", formData, config)\n      .then(async (response) => {\n        if (response.data.success) {\n          console.log(response.data.url);\n          const fileName = response.data.url;\n          console.log(fileName);\n          try {\n            const config = {\n              headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${user.token}`,\n              },\n            };\n            setNewMessage(\"\");\n            const { data } = await axios.post(\n              \"/api/message\",\n              {\n                content: fileName,\n                chatId: selectedChat,\n              },\n              config\n            );\n            socket.emit(\"new message\", data);\n            setMessages([...messages, data]);\n          } catch (error) {\n            toast({\n              title: \"Error Occured!\",\n              description: \"Failed to send the Message\",\n              status: \"error\",\n              duration: 5000,\n              isClosable: true,\n              position: \"bottom\",\n            });\n          }\n        }\n      });\n  };\n\n  const history = useHistory();\n\n  // Handle video chat room creation\n  const handlevideo = async (event) => {\n    const VMessage = \"You can join the room chat using this roomId\";\n    const userName = selectedChat.users[1].name;\n    const message = `${VMessage}: ${userName}`;\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      setNewMessage(\"\");\n      const { data } = await axios.post(\n        \"/api/message\",\n        {\n          content: message,\n          chatId: selectedChat,\n        },\n        config\n      );\n      socket.emit(\"new message\", data);\n      setMessages([...messages, data]);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to send the Message\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n    history.push(`/room/${userName}`);\n  };\n\n  //BackGround Change Function\n  const [bg, setbg] = useState(\"\");\n  const bgchange = (files) => {\n    const file = files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setbg(reader.result); // Update the background image URL\n      };\n      reader.readAsDataURL(file); // Read the file as a data URL\n    }\n  };\n\n  //Audio file sending funtion\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [voice, setVoice] = useState(false);\n  const [audioLink, setAudioLink] = useState(\"\");\n  const [audioLinksArray, setAudioLinksArray] = useState([]);\n\n  //Sends the audio file in the voice folder\n  const onStop = async (blob) => {\n    console.log(blob);\n    console.log(blob.blobURL);\n\n    const formData = new FormData();\n    formData.append(\"file\", blob.blob, \"audio.webm\"); // 'blob.blob' is the raw Blob data\n\n    try {\n      // Replace '/api/upload' with your actual endpoint for uploading files\n      const uploadResponse = await axios.post(\n        \"/api/chat/uploadvoice\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: `Bearer ${user.token}`, // Add your authorization token if required\n          },\n        }\n      );\n\n      if (uploadResponse.data.success) {\n        const fileUrl = uploadResponse.data.url; // URL of the uploaded audio file\n        setAudioLink(fileUrl);\n        setAudioLinksArray((prevArray) => [fileUrl, ...prevArray]);\n      } else {\n        throw new Error(\"Upload failed\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading audio:\", error);\n      toast({\n        title: \"Error Occurred!\",\n        description: \"Failed to upload the audio.\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n  const startHandle = () => {\n    setVoice(true);\n  };\n  const stopHandle = () => {\n    setVoice(false);\n  };\n\n  // send the audio file in the chat\n  const sendVoice = async () => {\n    console.log(\"this is an voice array\", audioLinksArray);\n    if (!audioLink) {\n      toast({\n        title: \"No audio recorded!\",\n        description: \"Please record an audio before sending.\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/message\",\n        {\n          content: audioLinksArray[0], // Use audioLink here\n          chatId: selectedChat,\n        },\n        config\n      );\n      socket.emit(\"new message\", data);\n      setMessages([...messages, data]);\n      setAudioLink(\"\"); // Clear the audio link after sending\n    } catch (error) {\n      toast({\n        title: \"Error Occurred!\",\n        description: \"Failed to send the message.\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n\n          <Box\n            style={{\n              backgroundImage: `url(${bg})`,\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n              backgroundRepeat: \"no-repeat\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat\n                  messages={messages}\n                  audioLinksArray={audioLinksArray}\n                />\n              </div>\n            )}\n\n            <FormControl\n              width=\"100%\"\n              height=\"50px\"\n              style={{ backgroundColor: \"#EFF2F4\", borderRadius: \"10px\" }}\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n            >\n              <Menu>\n                <MenuButton\n                  _hover={{ backgroundColor: \"#EFF2F4\" }}\n                  bg=\"#EFF2F4\"\n                  onClick={() => setMenuOpen(!menuOpen)}\n                  as={Button}\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                  setMenuOpen=\"true\"\n                >\n                  {menuOpen ? (\n                    <AddIcon style={{ color: \"#555555\" }} />\n                  ) : (\n                    <AddIcon style={{ color: \"#555555\" }} />\n                  )}\n                </MenuButton>\n\n                <MenuList>\n                  <MenuItem onClick={handlevideo}>\n                    <IoIosVideocam\n                      style={{ marginRight: \"5px\", fontSize: \"24px\" }}\n                    />\n                    VideoRoom\n                  </MenuItem>\n\n                  <MenuDivider />\n\n                  <Dropzone onDrop={onDrop}>\n                    {({ getRootProps, getInputProps }) => (\n                      <section>\n                        <div {...getRootProps()}>\n                          <input {...getInputProps()} />\n                          <MenuItem>\n                            <IoDocumentAttach\n                              style={{ marginRight: \"5px\", fontSize: \"24px\" }}\n                            />\n                            UploadFiles\n                          </MenuItem>\n                        </div>\n                      </section>\n                    )}\n                  </Dropzone>\n                  <MenuDivider />\n                  <Dropzone onDrop={bgchange}>\n                    {({ getRootProps, getInputProps }) => (\n                      <section>\n                        <div {...getRootProps()}>\n                          <input {...getInputProps()} />\n                          <MenuItem>\n                            <MdChangeCircle\n                              style={{ marginRight: \"5px\", fontSize: \"24px\" }}\n                            />\n                            Background\n                          </MenuItem>\n                        </div>\n                      </section>\n                    )}\n                  </Dropzone>\n                  <MenuDivider />\n\n                  <MenuItem onClick={onOpen}>\n                    <div>\n                      <div style={{ display: \"flex\" }}>\n                        <MdMic\n                          style={{ marginRight: \"5px\", fontSize: \"24px\" }}\n                        />\n                        Voice Record\n                      </div>\n                      <Modal\n                        size=\"2xl\"\n                        onClose={onClose}\n                        isOpen={isOpen}\n                        isCentered\n                      >\n                        <ModalOverlay />\n                        <ModalContent h=\"280px\">\n                          <ModalHeader\n                            fontSize=\"40px\"\n                            fontFamily=\"Work sans\"\n                            d=\"flex\"\n                            justifyContent=\"flex-start\"\n                          >\n                            Voice Recorder\n                          </ModalHeader>\n                          <ModalCloseButton />\n                          <ModalBody\n                            display=\"flex\"\n                            flexDir=\"column\"\n                            alignItems=\"center\"\n                            justifyContent=\"space-between\"\n                          >\n                            <ReactMic\n                              className=\"Mic\"\n                              record={voice}\n                              onStop={onStop}\n                            />\n                          </ModalBody>\n                          <ModalFooter>\n                            <div\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                              }}\n                            >\n                              <IconButton\n                                bg=\"white\"\n                                icon={<AiOutlineAudio size=\"xs\" />}\n                                onClick={startHandle}\n                                disabled={voice} // Disable when already recording\n                                style={{ padding: \"8px\", margin: \"5px\" }}\n                                _hover={{\n                                  bg: \"green.400\",\n                                }}\n                              />\n                              <IconButton\n                                icon={<AiOutlineAudioMuted size=\"xs\" />}\n                                onClick={stopHandle}\n                                disabled={!voice} // Disable when not recording\n                                style={{ padding: \"8px\", margin: \"5px\" }}\n                                _hover={{\n                                  bg: \"red.400\",\n                                }}\n                              />\n                              <IconButton\n                                icon={<BiSend size=\"xs\" />}\n                                onClick={sendVoice}\n                                disabled={!audioLink} // Disable when no audio to send\n                                style={{ padding: \"8px\", margin: \"5px\" }}\n                                _hover={{\n                                  bg: \"green.400\",\n                                }}\n                              />\n                            </div>\n                          </ModalFooter>\n                        </ModalContent>\n                      </Modal>\n                    </div>\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n\n              <IconButton\n                bg=\"#EFF2F4\"\n                _hover={{ backgroundColor: \"#EFF2F4\" }}\n                icon={<MdEmojiEmotions />}\n                style={{\n                  marginRight: \"5px\",\n                  marginLeft: \"5px\",\n                  color: \"#555555\",\n                }}\n                fontSize=\"2xl\"\n                onClick={() => setShowPicker((val) => !val)}\n              />\n              {showPicker && (\n                <div className=\"Picker-container\">\n                  <Picker\n                    pickerStyle={{\n                      position: \"relative\",\n                      bottom: \"8px\",\n                      left: \"1px\",\n                      width: \"100%\",\n                    }}\n                    onEmojiClick={onEmojiClick}\n                  />\n                </div>\n              )}\n\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                _hover={{ backgroundColor: \"#EFF2F4\" }}\n                style={{\n                  color: \"black\",\n                  fontSize: \"18px\",\n                }}\n                variant=\"filled\"\n                bg=\"#EFF2F4\"\n                value={newMessage}\n                onChange={typingHandler}\n                placeholder=\"Type message here...\"\n              />\n              <div className=\"Icon\">\n                <IconButton\n                  _hover={{ backgroundColor: \"#EFF2F4\" }}\n                  bg=\"#EFF2F4 \"\n                  icon={<IoIosSend style={{ color: \"#555555\" }} />}\n                  style={{ marginRight: \"5px\", marginLeft: \"5px\" }}\n                  onClick={handleSend}\n                  fontSize=\"3xl\"\n                />\n                {/* <IconButton onClick={handleBlock} /> */}\n              </div>\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","//Chakra-UI Components\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\n//Other Components\nimport axios from \"axios\";\nimport { useState } from \"react\";\n//user Created components\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Mayuresh, Shravani\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button, Tooltip } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { MdGroupAdd } from \"react-icons/md\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <b>My Chats</b>\n        <GroupChatModal>\n          <Tooltip label=\"Join video room\" hasArrow placement=\"bottom-end\">\n            <Button\n              bg=\"#EF233C\"\n              fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n              _hover={{\n                background: \"linear-gradient(to right, #6c5ed2, #8854d3)\",\n              }}\n            >\n              <MdGroupAdd style={{ color: \"white\" }} />\n            </Button>\n          </Tooltip>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#EDF2F4\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                border=\"none\"\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#FFFFFF\" : \"#EDF2F4\"}\n                color={selectedChat === chat ? \"black\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","//React Components\nimport React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n//Chakra-UI components\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  IconButton,\n  Button,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { BiSolidVideoPlus } from \"react-icons/bi\";\n\nconst VideoModal = ({ user }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [value, setValue] = useState();\n  const history = useHistory();\n\n  //move user to the VideoChat Room\n  const buttonClick = useCallback(() => {\n    history.push(`/room/${value}`);\n  }, [history, value]);\n\n  return (\n    <>\n      {/* IconButton to trigger the modal */}\n      <Tooltip label=\"Join video room\" hasArrow placement=\"bottom-end\">\n        <IconButton\n          icon={<BiSolidVideoPlus style={{ color: \"white\" }} />}\n          bg=\"#EF233C\"\n          aria-label=\"Open Modal\"\n          onClick={onOpen}\n          fontSize=\"2xl\"\n          _hover={{\n            background: \"linear-gradient(to right, #6c5ed2, #8854d3)\",\n          }}\n        />\n      </Tooltip>\n      {/* Modal Component */}\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>{user}</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <input\n              value={value}\n              onChange={(e) => {\n                setValue(e.target.value);\n              }}\n              type=\"text\"\n              placeholder=\"Enter roomId\"\n            />\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme=\"teal\" onClick={buttonClick}>\n              Join Room\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default VideoModal;\n","export default __webpack_public_path__ + \"static/media/message.8cdb6af2.png\";","//React Components\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\n//Other Components\nimport axios from \"axios\";\n//UserCreated Components\nimport ChatLoading from \"../ChatLoading\";\nimport ProfileModal from \"./ProfileModal\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport VideoModal from \"./VideoModal\";\nimport logo from \"../miscellaneous/message.png\";\n//Chakra-UI Components\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport { BellIcon } from \"@chakra-ui/icons\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Button } from \"@chakra-ui/button\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const history = useHistory();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button\n            style={{ color: \"white\" }}\n            bg=\"#EF233C\"\n            variant=\"ghost\"\n            onClick={onOpen}\n            _hover={{\n              background: \"linear-gradient(to right, #6c5ed2, #8854d3)\",\n            }}\n          >\n            <i className=\"fas fa-search\"></i>\n          </Button>\n        </Tooltip>\n        <Text\n          fontSize=\"3xl\"\n          fontFamily=\"Work sans\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <img src={logo} style={{ height: \"38px\", marginRight: \"10px\" }} />\n          <b>ChatWeb</b>\n        </Text>\n        <div style={{ margin: \"5px\" }}>\n          <VideoModal user={user.name} />\n          <Menu>\n            <MenuButton\n              p={1}\n              bg=\"#EF233C\"\n              style={{ marginLeft: \"5px\", borderRadius: \"5px\" }}\n              _hover={{\n                background: \"linear-gradient(to right, #6c5ed2, #8854d3)\",\n              }}\n            >\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} style={{ color: \"white\" }} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton\n              p={1}\n              as={Button}\n              bg=\"#EF233C\"\n              style={{\n                marginLeft: \"5px\",\n                paddingLeft: \"12px\",\n              }}\n              _hover={{\n                background: \"linear-gradient(to right, #6c5ed2, #8854d3)\",\n              }}\n            >\n              <BsThreeDotsVertical fontSize=\"3xl\" style={{ color: \"white\" }} />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\nconst Room = () => {\n  const { roomId } = useParams();\n  const myMeeting = async (element) => {\n    const appId = 1666962790;\n    const serverSecret = \"e95711aa7130d45b86ff367f05a232f5\";\n    const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\n      appId,\n      serverSecret,\n      roomId,\n      Date.now().toString(),\n      \" \"\n    );\n    const zc = ZegoUIKitPrebuilt.create(kitToken);\n\n    zc.joinRoom({\n      container: element,\n      sharedLinks: [\n        {\n          name: \"Copy Link\",\n          url: `http://localhost:3000/room/${roomId}`,\n        },\n      ],\n      scenario: {\n        mode: ZegoUIKitPrebuilt.OneONoneCall,\n      },\n      showScreenSharingButton: true,\n    });\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        marginLeft: \"28%\",\n      }}\n    >\n      <div ref={myMeeting} />\n    </div>\n  );\n};\n\nexport default Room;\n","import \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport Homepage from \"./Pages/Homepage\";\nimport Chatpage from \"./Pages/Chatpage\";\nimport Room from \"./Pages/room/Room\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n      <Route path=\"/room/:roomId\" component={Room} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ColorModeScript } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ColorModeScript initialColorMode=\"light\" />\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}